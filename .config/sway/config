
# Common functions
set $get_views vs=$(swaymsg -rt get_tree | jq "recurse(.nodes[], .floating_nodes[]) | select(.visible).id")
set $get_focused f=$(swaymsg -rt get_tree | jq "recurse(.nodes[], .floating_nodes[]) | first(select(.focused)).id")
set $get_output o=$(swaymsg -rt get_outputs | jq -r ".[] | first(select(.focused).name)")
set $get_workspaces ws=$(swaymsg -rt get_workspaces | jq -r ".[].num")
set $get_prev_workspace w=$(( $( swaymsg -t get_workspaces | jq -r ".[] | first(select(.focused).num)" ) - 1 )) && w=$(( $w < 1 ? 1 : ($w < 9 ? $w : 9) ))
set $get_next_workspace w=$(( $( swaymsg -t get_workspaces | jq -r ".[] | first(select(.focused).num)" ) + 1 )) && w=$(( $w < 1 ? 1 : ($w < 9 ? $w : 9) ))
set $get_empty_workspace w=$(swaymsg -rt get_workspaces | jq ". as \$w | first(range(1; 9) | select(all(. != \$w[].num; .)))")
set $group swaymsg "mark --add g" || swaymsg "splitv, mark --add g"
set $ungroup swaymsg "[con_mark=g] focus, unmark g" || swaymsg "focus parent; focus parent; focus parent; focus parent"

# Appearance
output * bg #101010 solid_color
default_border pixel 2
default_floating_border pixel 2
for_window [class=".*"]  border pixel 2
for_window [app_id=".*"] border pixel 2
font Terminess Nerd Font 12
client.focused           #202020 #ffffff #000000 #ff0000 #ffffff
client.focused_inactive  #202020 #202020 #ffffff #202020 #202020
client.focused_tab_title #202020 #ffffff #000000
client.unfocused         #202020 #202020 #808080 #202020 #202020

# Startup scripts and daemons
# Notifications
exec_always pidof mako || mako
# Battery warning notifications
exec_always pidof -x batteryd || batteryd
# Clipboard manager
exec_always pidof wl-paste || wl-paste --watch cliphist store
# Idle locking + suspending
exec_always powerctl uncaffeinate
# Output setup
exec displayctl auto
exec $get_output && swaymsg "workspace 1:$o"
# Bars
# TODO: multimonitor bars
bar {
	swaybar_command waybar
	mode hide
}

# Input devices
input type:keyboard {
	xkb_layout ie
	xkb_options caps:escape
	repeat_delay 250
	repeat_rate 30
}
input type:touchpad {
	dwt disabled
	tap enabled
	natural_scroll enabled
	click_method clickfinger
	scroll_method two_finger
}

# Mouse
floating_modifier Mod4 normal
focus_follows_mouse no
mouse_warping output

# Program shortcuts
bindsym Mod4+space                   exec flock --nonblock --close /tmp/wofi.lock wofi --prompt "" --show "run,drun"
bindsym Mod4+Shift+space             exec rm /tmp/wofi.lock
bindsym Mod4+Return                  exec $TERMINAL
bindsym Mod4+t                       exec $TERMINAL
bindsym Mod4+w                       exec $BROWSER
bindsym Mod4+d                       exec discord
bindsym Mod4+Escape                  exec powerctl
bindsym --locked Mod4+Shift+Escape   exec powerctl lock
bindsym --locked Mod4+Control+Escape exec powerctl suspend
bindsym Mod4+Control+Shift+Escape    exec powerctl reload
bindsym Mod4+backslash               exec displayctl
bindsym Mod4+Shift+backslash         exec displayctl mono
bindsym Mod4+Control+backslash       exec displayctl duel
bindsym Mod4+n                       exec networkctl
bindsym Mod4+Shift+n                 exec networkctl wifi
bindsym Mod4+Control+n               exec networkctl bluetooth
bindsym Mod4+b                       border pixel 2
bindsym Mod4+shift+b                 border none
bindsym Mod4+v                       exec CH_PROMPT="Clipboard" choose "$(cliphist list)" | cliphist decode | wl-copy
bindsym Mod4+apostrophe              exec psswrds get
bindsym Mod4+Shift+apostrophe        exec psswrds new
bindsym Mod4+Control+apostrophe      exec psswrds lock
bindsym Mod4+grave                   exec makoctl dismiss
bindsym Mod4+Shift+grave             exec makoctl restore
bindsym Mod4+Control+grave           exec makoctl menu wofi --dmenu --prompt "Action"

# Windows
focus_wrapping no
bindsym Mod4+h focus left
bindsym Mod4+j focus down
bindsym Mod4+k focus up
bindsym Mod4+l focus right
bindsym Mod4+Shift+h exec $group && swaymsg "move left  50px" && $ungroup
bindsym Mod4+Shift+j exec $group && swaymsg "move down  50px" && $ungroup
bindsym Mod4+Shift+k exec $group && swaymsg "move up    50px" && $ungroup
bindsym Mod4+Shift+l exec $group && swaymsg "move right 50px" && $ungroup
bindsym Mod4+Control+h resize shrink width 50px
bindsym Mod4+Control+j resize grow height 50px
bindsym Mod4+Control+k resize shrink height 50px
bindsym Mod4+Control+l resize grow width 50px
bindsym Mod4+Tab       exec $get_views && $get_focused && n=$(printf "$vs\n$vs\n" | cat | awk "/$f/{getline; print; exit}") && swaymsg "[con_id=$n] focus"
bindsym Mod4+Shift+Tab exec $get_views && $get_focused && n=$(printf "$vs\n$vs\n" | tac | awk "/$f/{getline; print; exit}") && swaymsg "[con_id=$n] focus"
bindsym Mod4+f focus mode_toggle
bindsym Mod4+Shift+f border pixel 2, floating toggle
bindsym Mod4+x sticky toggle
bindsym Mod4+m fullscreen
bindsym Mod4+q kill

# Workspaces
bindsym Mod4+1 exec $get_output && swaymsg "workspace 1:$o"
bindsym Mod4+2 exec $get_output && swaymsg "workspace 2:$o"
bindsym Mod4+3 exec $get_output && swaymsg "workspace 3:$o"
bindsym Mod4+4 exec $get_output && swaymsg "workspace 4:$o"
bindsym Mod4+5 exec $get_output && swaymsg "workspace 5:$o"
bindsym Mod4+6 exec $get_output && swaymsg "workspace 6:$o"
bindsym Mod4+7 exec $get_output && swaymsg "workspace 7:$o"
bindsym Mod4+8 exec $get_output && swaymsg "workspace 8:$o"
bindsym Mod4+9 exec $get_output && swaymsg "workspace 9:$o"
bindsym Mod4+Shift+1 exec $group && $get_output && swaymsg "move container workspace 1:$o, workspace number 1:$o" && $ungroup
bindsym Mod4+Shift+2 exec $group && $get_output && swaymsg "move container workspace 2:$o, workspace number 2:$o" && $ungroup
bindsym Mod4+Shift+3 exec $group && $get_output && swaymsg "move container workspace 3:$o, workspace number 3:$o" && $ungroup
bindsym Mod4+Shift+4 exec $group && $get_output && swaymsg "move container workspace 4:$o, workspace number 4:$o" && $ungroup
bindsym Mod4+Shift+5 exec $group && $get_output && swaymsg "move container workspace 5:$o, workspace number 5:$o" && $ungroup
bindsym Mod4+Shift+6 exec $group && $get_output && swaymsg "move container workspace 6:$o, workspace number 6:$o" && $ungroup
bindsym Mod4+Shift+7 exec $group && $get_output && swaymsg "move container workspace 7:$o, workspace number 7:$o" && $ungroup
bindsym Mod4+Shift+8 exec $group && $get_output && swaymsg "move container workspace 8:$o, workspace number 8:$o" && $ungroup
bindsym Mod4+Shift+9 exec $group && $get_output && swaymsg "move container workspace 9:$o, workspace number 9:$o" && $ungroup
bindsym Mod4+Control+1 exec $get_output && swaymsg "move container workspace number 1:$o"
bindsym Mod4+Control+2 exec $get_output && swaymsg "move container workspace number 2:$o"
bindsym Mod4+Control+3 exec $get_output && swaymsg "move container workspace number 3:$o"
bindsym Mod4+Control+4 exec $get_output && swaymsg "move container workspace number 4:$o"
bindsym Mod4+Control+5 exec $get_output && swaymsg "move container workspace number 5:$o"
bindsym Mod4+Control+6 exec $get_output && swaymsg "move container workspace number 6:$o"
bindsym Mod4+Control+7 exec $get_output && swaymsg "move container workspace number 7:$o"
bindsym Mod4+Control+8 exec $get_output && swaymsg "move container workspace number 8:$o"
bindsym Mod4+Control+9 exec $get_output && swaymsg "move container workspace number 9:$o"
bindsym Mod4+Comma                exec $get_output && $get_prev_workspace && swaymsg "workspace $w:$o"
bindsym Mod4+Period               exec $get_output && $get_next_workspace && swaymsg "workspace $w:$o"
bindsym Mod4+Shift+Comma          exec $group && $get_output && $get_prev_workspace && swaymsg "move container workspace $w:$o, workspace $w:$o" && $ungroup
bindsym Mod4+Shift+Period         exec $group && $get_output && $get_next_workspace && swaymsg "move container workspace $w:$o, workspace $w:$o" && $ungroup
bindsym Mod4+Control+Comma        exec $get_output && $get_prev_workspace && swaymsg "move container workspace $w:$o"
bindsym Mod4+Control+Period       exec $get_output && $get_next_workspace && swaymsg "move container workspace $w:$o"
bindsym Mod4+Control+Shift+Comma  exec '$get_output && $get_workspaces && ws=$(echo "$ws" | cat) && [ "$(echo "$ws" | head -1)" != "1" ] && for w in $ws; do i=$(( $w - 1 )); swaymsg "rename workspace $w:$o to $i:$o"; done'
bindsym Mod4+Control+Shift+Period exec '$get_output && $get_workspaces && ws=$(echo "$ws" | tac) && [ "$(echo "$ws" | head -1)" != "9" ] && for w in $ws; do i=$(( $w + 1 )); swaymsg "rename workspace $w:$o to $i:$o"; done'
bindsym Mod4+z               exec $get_output && $get_empty_workspace && swaymsg "workspace number $w:$o"
bindsym Mod4+Shift+z         exec $group && $get_output && $get_empty_workspace && swaymsg "move container workspace $w:$o, workspace number $w:$o" && $foucs_group
bindsym Mod4+Control+z       exec '$group && $get_output && $get_empty_workspace && swaymsg "move container workspace number $w:$o" && $foucs_group'
bindsym Mod4+Control+Shift+z exec '$group && $get_output && $get_workspaces && i=1; for w in $ws; do swaymsg rename workspace $w:$o to $i:$o; i=$(( $i + 1 )); done && $foucs_group'

# Outputs
bindsym Mod4+equal         exec $get_output && swaymsg output $(swaymsg -rt get_outputs | jq -r '.[] | select(.name == "'$o'") | "\(.name) scale \(.scale * 1.1)"')
bindsym Mod4+minus         exec $get_output && swaymsg output $(swaymsg -rt get_outputs | jq -r '.[] | select(.name == "'$o'") | "\(.name) scale \(.scale / 1.1)"')
bindsym Mod4+Shift+equal   exec $get_output && swaymsg output $(swaymsg -rt get_outputs | jq -r '.[] | select(.name == "'$o'") | "\(.name) scale \(.scale * 1.5)"')
bindsym Mod4+Shift+minus   exec $get_output && swaymsg output $(swaymsg -rt get_outputs | jq -r '.[] | select(.name == "'$o'") | "\(.name) scale \(.scale / 1.5)"')
bindsym Mod4+Control+equal exec $get_output && swaymsg output "$o" scale 1
bindsym Mod4+Control+minus exec $get_output && swaymsg output "$o" scale 2

# Layout
default_orientation auto
bindsym Mod4+g       focus parent
bindsym Mod4+Shift+g focus child
bindsym Mod4+p       split vertical
bindsym Mod4+Shift+p split none
bindsym Mod4+o       layout toggle splitv splith
bindsym Mod4+Shift+o layout toggle split tabbed

# Scratchpads
bindsym Mod4+0 scratchpad show
bindsym Mod4+Shift+0 move scratchpad

# Media
bindsym --locked XF86AudioPlay         exec playerctl play-pause
bindsym --locked Shift+XF86AudioPlay   exec playerctl pause
bindsym --locked Control+XF86AudioPlay exec playerctl stop
bindsym --locked XF86AudioPrev         exec playerctl position 1-
bindsym --locked Shift+XF86AudioPrev   exec playerctl position 10-
bindsym --locked Control+XF86AudioPrev exec playerctl previous
bindsym --locked XF86AudioNext         exec playerctl position 1+
bindsym --locked Shift+XF86AudioNext   exec playerctl position 10+
bindsym --locked Control+XF86AudioNext exec playerctl next

# Volume
set $send_volume_notif wpctl get-volume @DEFAULT_SINK@ | (read _ v m && v=$(printf "%.0f" $(echo "100*$v" | bc)) && notify-send --category osd --hint "int:value:$v" "Volume: $v% $m")
bindsym --locked XF86AudioMute                      exec wpctl set-mute   @DEFAULT_SINK@ toggle && $send_volume_notif
bindsym --locked Shift+XF86AudioMute                exec                                           $send_volume_notif
bindsym --locked Control+XF86AudioMute              exec wpctl set-mute   @DEFAULT_SINK@ 1      && $send_volume_notif
bindsym --locked XF86AudioLowerVolume               exec wpctl set-volume @DEFAULT_SINK@ 1%-    && $send_volume_notif
bindsym --locked Shift+XF86AudioLowerVolume         exec wpctl set-volume @DEFAULT_SINK@ 10%-   && $send_volume_notif
bindsym --locked Control+XF86AudioLowerVolume       exec wpctl set-volume @DEFAULT_SINK@ 0%     && $send_volume_notif
bindsym --locked XF86AudioRaiseVolume               exec wpctl set-volume @DEFAULT_SINK@ 1%+    && $send_volume_notif
bindsym --locked Shift+XF86AudioRaiseVolume         exec wpctl set-volume @DEFAULT_SINK@ 10%+   && $send_volume_notif
bindsym --locked Control+XF86AudioRaiseVolume       exec wpctl set-volume @DEFAULT_SINK@ 100%   && $send_volume_notif

# Microphone
bindsym --locked --no-repeat                Pause   exec wpctl set-mute @DEFAULT_SOURCE@ 0
bindsym --locked --no-repeat --release      Pause   exec wpctl set-mute @DEFAULT_SOURCE@ 1
bindsym --locked --no-repeat --whole-window button8 exec wpctl set-mute @DEFAULT_SOURCE@ toggle

# Backlight
set $send_brightness_notif b=$(printf "%.0f" "$(light -G)") && notify-send --category osd --hint "int:value:$b" "Brightness: $b%"
bindsym --locked XF86MonBrightnessDown               exec light -U 1   && $send_brightness_notif
bindsym --locked Shift+XF86MonBrightnessDown         exec light -U 10  && $send_brightness_notif
bindsym --locked Control+XF86MonBrightnessDown       exec light -S 0   && $send_brightness_notif
bindsym --locked XF86MonBrightnessUp                 exec light -A 1   && $send_brightness_notif
bindsym --locked Shift+XF86MonBrightnessUp           exec light -A 10  && $send_brightness_notif
bindsym --locked Control+XF86MonBrightnessUp         exec light -S 100 && $send_brightness_notif

# Screenshots
bindsym Print       exec flameshot gui --raw | wl-copy --type image/png
bindsym Shift+Print exec flameshot gui --raw --accept-on-select | wl-copy --type image/png

# System config
include /etc/sway/config.d/*
