#!/bin/sh

dots="$HOME/.local/dots"
git="git --git-dir="$dots" --work-tree="$HOME""
git_ssh="git@github.com:/tedski999/dots"
git_http="https://github.com/tedski999/dots"
[ "$1" != "init" ] && exec $git "$@"

case "$2" in "msung"|"septs"|"guest") p="$2";; *) echo "Unknown profile: $2"; exit 1;; esac
[ "$(id -u)" = "0" ] && { echo "Please run as non-root"; exit 1; }

msg() { printf "\n\033[1;33m$@\033[0m\n"; }

msung_pkgs="firefox-esr alacritty fonts-terminus"
septs_pkgs=""

# Clone dots repository
[ -d "$dots" ] || {
	msg "Cloning dots repository..."
	git clone --bare "$git_http" "$dots" || exit 1
	if ! out="$($git checkout main 2>&1)"; then
		echo "WARNING: The next operation WILL overwrite the following files:"
		printf "%s" "$out" | tail --lines +2 | head --lines -2
		printf "Enter y to proceed with data loss: " && read -r res
		[ "$res" = "y" ] && $git checkout main --force || exit 1
	fi
}
[ "$($git remote get-url origin)" != "$git_ssh" ] && {
	msg "Upgrading dots remote to authenticated SSH..."
	ssh-add -L && { $git remote set-url origin "$git_ssh" && $git fetch || exit 1; }
}

# Install files
chmod 644 "$HOME/.ssh/config" || exit 1
find "$HOME/.gnupg/" -type f -exec chmod 600 {} \; || exit 1
find "$HOME/.gnupg/" -type d -exec chmod 700 {} \; || exit 1
mkdir -p "$dots/info" "$HOME/.local/share" || exit 1
ln -sf "$HOME/.config/git/gitignore" "$dots/info/exclude" || exit 1
for file in $(find "$HOME/.local/root/$p" -type f -printf %P\\n 2>/dev/null); do
	sudo [ -L "/$file" ] || {
		msg "Installing $HOME/.local/root/$p/$file into system..."
		sudo mkdir -p "$(dirname "/$file")" || exit 1
		sudo chown root: "$HOME/.local/root/$p/$file" || exit 1
		sudo ln -sf "$HOME/.local/root/$p/$file" "/$file" || exit 1
	}
done

# Install system packages
case "$p" in
	"msung")
		pkgs="$(dpkg-query --show --showformat='${Status} ${Package}\n' $msung_pkgs 2>&1 | sed '/^install ok installed/d' | sed 's/.* //')"
		[ -n "$pkgs" ] && { msg "Installing packages..."; sudo apt-get --assume-yes install $pkgs || exit 1; }
		;;
	"septs")
		pkgs="$(dpkg-query --show --showformat='${Status} ${Package}\n' $septs_pkgs 2>&1 | sed '/^install ok installed/d' | sed 's/.* //')"
		[ -n "$pkgs" ] && { msg "Installing packages..."; sudo apt-get --assume-yes install $pkgs || exit 1; }
		;;
esac

# Install nix
# TODO: rootless for guest
[ -d /nix ] || {
	msg "Installing Nix..."; sh -c "$(curl -L https://nixos.org/nix/install)" -- --daemon --yes || exit 1
	exit 0
}
nix profile install "$HOME/.config/nix"

# Configure system
case "$p" in
	"msung")
		# TODO: set login shell to nix zsh

		# TODO: snapshots?

		# TODO: grub
		# sudo grub-mkconfig -o /boot/grub/grub.cfg || exit 1
		# sudo cp -rL /usr/share/grub/themes/minimal /boot/grub/themes/minimal || exit 1
		# sudo mkinitcpio --allpresets || { [ $? -ne 1 ] && exit 1; }
		;;
	"septs")
		;;
esac

msg "Done."
