#!/bin/sh

status=0

# TODO: ensure enough space available

# Mount btrfs root if not already
unset device
mkdir -p /media/btrfs || exit 1
mountpoint /media/btrfs >/dev/null || {
	device="$(df -P / | tail -1 | cut -d " " -f 1)"
	mount --types btrfs "$device" /media/btrfs || exit 1
}

# Prune older snapshots
now=$(date --utc +%s)
last=$now
for date in $(printf "%s\n" /media/btrfs/@rootfs-* | cut -d - -f 2- | sort --reverse); do
	this=$(date -d "$date" +%s)
	diff=$(( $last - $this ))
	age=$(( $now - $this ))
	if [ $age -lt 3600 ]; then # Keep all snapshots taken within last hour
		last=$this
	elif [ $age -lt 86400 ] && [ $diff -gt 21600 ]; then # Keep 6 hours between snapshots older than an hour => 4 snapshots per day
		last=$this
	elif [ $age -lt 604800 ] && [ $diff -gt 86400 ]; then # Keep 1 day between snapshots older than a day => 7 snapshots per week
		last=$this
	else # Delete all snapshots older than a week
		btrfs subvolume delete "/media/btrfs/@rootfs-$date" || status=$?
	fi
done

# Create new snapshot
now="$(date -d "@$now" --utc +%Y-%m-%dZ%H:%M:%S)"
btrfs subvolume snapshot / "/media/btrfs/@rootfs-$now" || status=$?

# Unmount btrfs root if it was not mounted before
[ -n "$device" ] && { umount /media/btrfs || status=$?; }

exit $status
